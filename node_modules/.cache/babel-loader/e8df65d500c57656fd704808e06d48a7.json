{"ast":null,"code":"import _classCallCheck from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ayaka/prefectures-population-graph/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checkbox: Array(47).fill(false),\n      prefectures: [],\n      graph: ''\n    };\n\n    _this.handleChangeCheckbox = function (index) {\n      _this.state.checkbox[index] = !_this.state.checkbox[index];\n\n      _this.setState({\n        checkbox: _this.state.checkbox\n      }); // 表示demo\n\n\n      _this.setState({\n        graph: _this.state.checkbox[index] ? _this.state.prefectures[index].prefName : null\n      });\n\n      if (_this.state.checkbox[index]) {\n        fetch('https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?cityCode=11362&prefCode=11', {\n          headers: {\n            'X-API-KEY': 'laQNIVQSq86KoGBF9t0pEsDTR5h9Ejs9EXm1spwN'\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (res) {\n          console.log(res.result); // ⇨ {prefCode: 1 prefName: \"北海道\"},{prefCode: 2, prefName: \"青森県\"},,,\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://opendata.resas-portal.go.jp/api/v1/prefectures', {\n        headers: {\n          'X-API-KEY': 'laQNIVQSq86KoGBF9t0pEsDTR5h9Ejs9EXm1spwN'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (res) {\n        // console.log(res.result); ⇨ {prefCode: 1 prefName: \"北海道\"},{prefCode: 2, prefName: \"青森県\"},,,\n        // console.log(res.result[1].prefName); ⇨ 青森県\n        _this2.setState({\n          prefectures: res.result\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"contentsWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"\\u90FD\\u9053\\u5E9C\\u770C\\u5225\\u306E\\u7DCF\\u4EBA\\u53E3\\u63A8\\u79FB\\u30B0\\u30E9\\u30D5\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.prefectures.map(function (pref, index) {\n        return React.createElement(\"li\", {\n          key: pref.prefCode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          checked: _this3.state.checkbox[index],\n          onChange: function onChange() {\n            return _this3.handleChangeCheckbox(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, pref.prefName));\n      })), this.state.graph);\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/ayaka/prefectures-population-graph/src/index.js"],"names":["React","ReactDOM","App","state","checkbox","Array","fill","prefectures","graph","handleChangeCheckbox","index","setState","prefName","fetch","headers","then","response","json","res","console","log","result","map","pref","prefCode","Component","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\n\nclass App extends React.Component {\n\n    state = {\n        checkbox: Array(47).fill(false),\n        prefectures: [],\n        graph: ''\n    };\n\n\n    componentDidMount() {\n        fetch('https://opendata.resas-portal.go.jp/api/v1/prefectures', {\n            headers: { 'X-API-KEY': 'laQNIVQSq86KoGBF9t0pEsDTR5h9Ejs9EXm1spwN' }\n        })\n        .then(response => response.json())\n        .then(res => {\n            // console.log(res.result); ⇨ {prefCode: 1 prefName: \"北海道\"},{prefCode: 2, prefName: \"青森県\"},,,\n            // console.log(res.result[1].prefName); ⇨ 青森県\n            this.setState({ prefectures: res.result });\n        });\n    }\n\n    handleChangeCheckbox = index => {\n        this.state.checkbox[index] = !this.state.checkbox[index];\n        this.setState({ checkbox: this.state.checkbox });\n        // 表示demo\n        this.setState({ graph: this.state.checkbox[index] ? this.state.prefectures[index].prefName : null })\n        if(this.state.checkbox[index]) {\n            fetch('https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?cityCode=11362&prefCode=11', {\n                headers: { 'X-API-KEY': 'laQNIVQSq86KoGBF9t0pEsDTR5h9Ejs9EXm1spwN' }\n            })\n            .then(response => response.json())\n            .then(res => {\n                console.log(res.result); // ⇨ {prefCode: 1 prefName: \"北海道\"},{prefCode: 2, prefName: \"青森県\"},,,\n            });\n        }\n    }  \n\n  render() {\n      \n    return (\n        <div className=\"contentsWrapper\">\n            <h1>都道府県別の総人口推移グラフ</h1>\n            <ul>\n                {this.state.prefectures.map((pref, index) => {\n                    return (\n                        <li key={pref.prefCode}>\n                            <input type=\"checkbox\" checked={this.state.checkbox[index]} onChange={() => this.handleChangeCheckbox(index)}/>\n                            <span>{pref.prefName}</span>\n                        </li>\n                    );\n                })}\n            </ul>\n            {this.state.graph}\n        </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}