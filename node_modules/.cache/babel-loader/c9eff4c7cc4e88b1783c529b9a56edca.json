{"ast":null,"code":"import _objectSpread from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ayaka/prefectures-population-graph/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputValue: \"\",\n      filter: \"all\",\n      error: \"\",\n      todos: [{\n        id: 1,\n        todo: \"todo1\",\n        isDone: false\n      }]\n    };\n\n    _this.changeInput = function (event) {\n      var newTodo = event.target.value; // errorMessageが表示されている場合、何か入力されればerrorMessageは削除する\n\n      _this.setState({\n        inputValue: newTodo,\n        error: \"\"\n      });\n    };\n\n    _this.addTodo = function (event) {\n      // formタグの画面遷移を止める\n      event.preventDefault(); // todoが入力されずに追加ボタンが押された場合のエラーメッセージ\n\n      if (event.target.inputTodo.value === \"\") {\n        _this.setState({\n          error: \"todoを入力してください\"\n        });\n\n        return;\n      } // todosの中のidだけ取得する\n\n\n      var ids = _this.state.todos.map(function (todo) {\n        return todo.id;\n      }); // ...idsでidsを展開し、idsの中で一番大きいものを取得する\n\n\n      var lastId = 0;\n\n      if (_this.state.todos.length > 0) {\n        lastId = Math.max.apply(Math, _toConsumableArray(ids));\n      }\n\n      var newId = lastId + 1;\n\n      var newTodos = _this.state.todos.concat({\n        id: newId,\n        todo: _this.state.inputValue,\n        isDone: false\n      });\n\n      _this.setState({\n        todos: newTodos,\n        inputValue: \"\"\n      });\n    };\n\n    _this.doneTodo = function (index) {\n      var todosCopy = _this.state.todos.slice(); // ...todosCopy[index]で、該当のTODOのid,todo,isDoneを展開。その上でisDoneを上書きする\n\n\n      todosCopy[index] = _objectSpread({}, todosCopy[index], {\n        isDone: true\n      });\n\n      _this.setState({\n        todos: todosCopy\n      });\n    };\n\n    _this.deleteTodo = function (index) {\n      _this.state.todos.splice(index, 1);\n\n      _this.setState({\n        todos: _this.state.todos\n      });\n    };\n\n    _this.allDisplay = function () {\n      _this.setState({\n        filter: \"all\"\n      });\n    };\n\n    _this.activeDisplay = function () {\n      _this.setState({\n        filter: \"active\"\n      });\n    };\n\n    _this.completedDisplay = function () {\n      _this.setState({\n        filter: \"completed\"\n      });\n    };\n\n    _this.clearCompleted = function () {\n      _this.state.todos.map(function (todo, index) {\n        if (todo.isDone === true) {\n          _this.state.todos.splice(index, 1);\n        }\n      });\n\n      _this.setState({\n        todos: _this.state.todos\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var allTodos = this.state.todos;\n      var activeTodos = this.state.todos.filter(function (todo) {\n        return todo.isDone === false;\n      });\n      var completedTodos = this.state.todos.filter(function (todo) {\n        return todo.isDone === true;\n      });\n      var displayTodos = [];\n\n      if (this.state.filter === \"all\") {\n        displayTodos = allTodos;\n      } else if (this.state.filter === \"active\") {\n        displayTodos = activeTodos;\n      } else if (this.state.filter === \"completed\") {\n        displayTodos = completedTodos;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"inputTodo\",\n        value: this.state.inputValue,\n        onChange: this.changeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"ToDo\\u8FFD\\u52A0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), this.state.error ? React.createElement(\"div\", {\n        className: \"errorMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.error) : null, React.createElement(\"button\", {\n        onClick: this.allDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"All\"), React.createElement(\"button\", {\n        onClick: this.activeDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Active\"), React.createElement(\"button\", {\n        onClick: this.completedDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Completed\"), React.createElement(\"button\", {\n        onClick: this.clearCompleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"ClearCompleted\"), displayTodos.map(function (todo, index) {\n        return React.createElement(\"div\", {\n          key: todo.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: todo.isDone ? \"todoContent\" : \"\",\n          onClick: function onClick() {\n            return _this2.doneTodo(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, todo.isDone ? \"[X]\" : \"[]\", \" id: \", todo.id, \" \", todo.todo), React.createElement(\"span\", {\n          className: \"deleteButton\",\n          onClick: function onClick() {\n            return _this2.deleteTodo(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"X\"));\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/ayaka/prefectures-population-graph/src/index.js"],"names":["React","ReactDOM","App","state","inputValue","filter","error","todos","id","todo","isDone","changeInput","event","newTodo","target","value","setState","addTodo","preventDefault","inputTodo","ids","map","lastId","length","Math","max","newId","newTodos","concat","doneTodo","index","todosCopy","slice","deleteTodo","splice","allDisplay","activeDisplay","completedDisplay","clearCompleted","allTodos","activeTodos","completedTodos","displayTodos","Component","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  state = {\n    inputValue: \"\",\n    filter: \"all\",\n    error: \"\",\n    todos: [{ id: 1, todo: \"todo1\", isDone: false }]\n  };\n\n  changeInput = event => {\n    const newTodo = event.target.value;\n    // errorMessageが表示されている場合、何か入力されればerrorMessageは削除する\n    this.setState({ inputValue: newTodo, error: \"\" });\n  };\n\n  addTodo = event => {\n    // formタグの画面遷移を止める\n    event.preventDefault();\n    // todoが入力されずに追加ボタンが押された場合のエラーメッセージ\n    if (event.target.inputTodo.value === \"\") {\n      this.setState({ error: \"todoを入力してください\" });\n      return;\n    }\n    // todosの中のidだけ取得する\n    const ids = this.state.todos.map(todo => todo.id);\n    // ...idsでidsを展開し、idsの中で一番大きいものを取得する\n    let lastId = 0;\n    if (this.state.todos.length > 0) {\n      lastId = Math.max(...ids);\n    }\n    const newId = lastId + 1;\n    const newTodos = this.state.todos.concat({\n      id: newId,\n      todo: this.state.inputValue,\n      isDone: false\n    });\n    this.setState({ todos: newTodos, inputValue: \"\" });\n  };\n\n  // indexはtodosの何番目の要素かを示す。　※idは普遍\n  doneTodo = index => {\n    const todosCopy = this.state.todos.slice();\n    // ...todosCopy[index]で、該当のTODOのid,todo,isDoneを展開。その上でisDoneを上書きする\n    todosCopy[index] = { ...todosCopy[index], isDone: true };\n    this.setState({ todos: todosCopy });\n  };\n\n  deleteTodo = index => {\n    this.state.todos.splice(index, 1);\n    this.setState({ todos: this.state.todos });\n  };\n\n  allDisplay = () => {\n    this.setState({ filter: \"all\" });\n  };\n\n  activeDisplay = () => {\n    this.setState({ filter: \"active\" });\n  };\n\n  completedDisplay = () => {\n    this.setState({ filter: \"completed\" });\n  };\n\n  clearCompleted = () => {\n    this.state.todos.map((todo, index) => {\n      if (todo.isDone === true) {\n        this.state.todos.splice(index, 1);\n      }\n    });\n    this.setState({ todos: this.state.todos });\n  };\n\n  render() {\n    const allTodos = this.state.todos;\n    const activeTodos = this.state.todos.filter(todo => todo.isDone === false);\n    const completedTodos = this.state.todos.filter(\n      todo => todo.isDone === true\n    );\n    let displayTodos = [];\n    if (this.state.filter === \"all\") {\n      displayTodos = allTodos;\n    } else if (this.state.filter === \"active\") {\n      displayTodos = activeTodos;\n    } else if (this.state.filter === \"completed\") {\n      displayTodos = completedTodos;\n    }\n    return (\n      <div>\n        <form onSubmit={this.addTodo}>\n          <input\n            type=\"text\"\n            name=\"inputTodo\"\n            value={this.state.inputValue}\n            onChange={this.changeInput}\n          />\n          <input type=\"submit\" value=\"ToDo追加\" />\n        </form>\n        {this.state.error ? (\n          <div className=\"errorMessage\">{this.state.error}</div>\n        ) : null}\n        <button onClick={this.allDisplay}>All</button>\n        <button onClick={this.activeDisplay}>Active</button>\n        <button onClick={this.completedDisplay}>Completed</button>\n        <button onClick={this.clearCompleted}>ClearCompleted</button>\n        {displayTodos.map((todo, index) => {\n          return (\n            <div key={todo.id}>\n              <span\n                className={todo.isDone ? \"todoContent\" : \"\"}\n                onClick={() => this.doneTodo(index)}\n              >\n                {todo.isDone ? \"[X]\" : \"[]\"} id: {todo.id} {todo.todo}\n              </span>\n              <span\n                className=\"deleteButton\"\n                onClick={() => this.deleteTodo(index)}\n              >\n                X\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}