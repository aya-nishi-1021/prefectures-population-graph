{"ast":null,"code":"import _classCallCheck from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ayaka/prefectures-population-graph/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ayaka/prefectures-population-graph/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputValue: \"bbb\",\n      filter: \"all\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var allTodos = this.state.todos;\n      var activeTodos = this.state.todos.filter(function (todo) {\n        return todo.isDone === false;\n      });\n      var completedTodos = this.state.todos.filter(function (todo) {\n        return todo.isDone === true;\n      });\n      var displayTodos = [];\n\n      if (this.state.filter === \"all\") {\n        displayTodos = allTodos;\n      } else if (this.state.filter === \"active\") {\n        displayTodos = activeTodos;\n      } else if (this.state.filter === \"completed\") {\n        displayTodos = completedTodos;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"inputTodo\",\n        value: this.state.inputValue,\n        onChange: this.changeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"ToDo\\u8FFD\\u52A0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), this.state.error ? React.createElement(\"div\", {\n        className: \"errorMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.error) : null, React.createElement(\"button\", {\n        onClick: this.allDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"All\"), React.createElement(\"button\", {\n        onClick: this.activeDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Active\"), React.createElement(\"button\", {\n        onClick: this.completedDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Completed\"), React.createElement(\"button\", {\n        onClick: this.clearCompleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"ClearCompleted\"), displayTodos.map(function (todo, index) {\n        return React.createElement(\"div\", {\n          key: todo.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: todo.isDone ? \"todoContent\" : \"\",\n          onClick: function onClick() {\n            return _this2.doneTodo(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, todo.isDone ? \"[X]\" : \"[]\", \" id: \", todo.id, \" \", todo.todo), React.createElement(\"span\", {\n          className: \"deleteButton\",\n          onClick: function onClick() {\n            return _this2.deleteTodo(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"X\"));\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), rootElement);","map":{"version":3,"sources":["/Users/ayaka/prefectures-population-graph/src/index.js"],"names":["React","ReactDOM","App","state","inputValue","filter","allTodos","todos","activeTodos","todo","isDone","completedTodos","displayTodos","addTodo","changeInput","error","allDisplay","activeDisplay","completedDisplay","clearCompleted","map","index","id","doneTodo","deleteTodo","Component","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass App extends React.Component {\n  state = {\n    inputValue: \"bbb\",\n    filter: \"all\",\n  };\n\n  render() {\n    const allTodos = this.state.todos;\n    const activeTodos = this.state.todos.filter(todo => todo.isDone === false);\n    const completedTodos = this.state.todos.filter(\n      todo => todo.isDone === true\n    );\n    let displayTodos = [];\n    if (this.state.filter === \"all\") {\n      displayTodos = allTodos;\n    } else if (this.state.filter === \"active\") {\n      displayTodos = activeTodos;\n    } else if (this.state.filter === \"completed\") {\n      displayTodos = completedTodos;\n    }\n    return (\n      <div>\n        <form onSubmit={this.addTodo}>\n          <input\n            type=\"text\"\n            name=\"inputTodo\"\n            value={this.state.inputValue}\n            onChange={this.changeInput}\n          />\n          <input type=\"submit\" value=\"ToDo追加\" />\n        </form>\n        {this.state.error ? (\n          <div className=\"errorMessage\">{this.state.error}</div>\n        ) : null}\n        <button onClick={this.allDisplay}>All</button>\n        <button onClick={this.activeDisplay}>Active</button>\n        <button onClick={this.completedDisplay}>Completed</button>\n        <button onClick={this.clearCompleted}>ClearCompleted</button>\n        {displayTodos.map((todo, index) => {\n          return (\n            <div key={todo.id}>\n              <span\n                className={todo.isDone ? \"todoContent\" : \"\"}\n                onClick={() => this.doneTodo(index)}\n              >\n                {todo.isDone ? \"[X]\" : \"[]\"} id: {todo.id} {todo.todo}\n              </span>\n              <span\n                className=\"deleteButton\"\n                onClick={() => this.deleteTodo(index)}\n              >\n                X\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}